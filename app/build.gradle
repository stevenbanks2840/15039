apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs'
apply from: "../jacoco.gradle"
apply from: "../sonar.gradle"

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.ftresearch.cakes"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions "version"

    productFlavors {
        development {
            dimension "version"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "String", 'CAKE_SERVER_URL', '"https://gist.githubusercontent.com"'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$androidx_swiperefreshlayout_version"
    implementation "com.google.android.material:material:$androidx_material_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_viewmodel_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_extensions_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_navigation"
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation 'androidx.work:work-testing:2.6.0'
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.work:work-runtime-ktx:$work_version")

    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test:core:$androidx_test_core_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "android.arch.core:core-testing:$androidx_arch_core_testing_version"
    testImplementation "androidx.test.ext:junit:$androidx_junit_runner_version"
    testImplementation "androidx.test.ext:junit-ktx:$androidx_junit_ktx_version"
    testImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_core_version"
    testImplementation "androidx.test.espresso:espresso-intents:$androidx_espresso_core_version"
    testImplementation "androidx.test.espresso:espresso-accessibility:$androidx_espresso_core_version"
    testImplementation "androidx.test.espresso:espresso-web:$androidx_espresso_core_version"
    testImplementation "androidx.test.espresso.idling:idling-concurrent:$androidx_espresso_core_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlin2_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "com.github.fabioCollini.daggermock:daggermock:$dagger_mock_version"
    testImplementation "com.github.fabioCollini.daggermock:daggermock-kotlin:$dagger_mock_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_test_version"
    testImplementation "androidx.work:work-testing:$work_version"
    testImplementation "androidx.navigation:navigation-testing:$androidx_navigation"
    debugImplementation "androidx.fragment:fragment-testing:$androidx_fragment_testing"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_android_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_android_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_android_version"

    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_converter_gson_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_kotlin_coroutines_adapter_version"

    implementation("io.coil-kt:coil:$coil_version")
}
